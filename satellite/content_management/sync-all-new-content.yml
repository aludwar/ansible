---
# This playbook syncs pre-defined product repositories in Red Hat Satellite 6.10
# in preparation for publishing in content views for a patch cycle
- hosts: satellite.ludwar.ca
  vars: 
    validate_certs: false

  tasks:
    - name: "Sync all RHEL 8 related repos"
      redhat.satellite.repository_sync:
        username: "{{ satellite_username }}"
        password: "{{ satellite_password }}"
        server_url: "{{ satellite_server_url }}"
        organization: "{{ satellite_organization }}"
        product: "{{ item.product }}"
        repository: "{{ item.name }}"
      loop: "{{ rhel8_repo_list }}"
      async: 1200
      poll: 0
      register: sync_status

    - name: "Check on syncing tasks - poll every 60s"
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 50
      delay: 60
      loop: "{{ sync_status.results }}"

    - name: "Sync all RHEL 9 related repos"
      redhat.satellite.repository_sync:
        username: "{{ satellite_username }}"
        password: "{{ satellite_password }}"
        server_url: "{{ satellite_server_url }}"
        organization: "{{ satellite_organization }}"
        product: "{{ item.product }}"
        repository: "{{ item.name }}"
      loop: "{{ rhel9_repo_list }}"
      async: 1200
      poll: 0
      register: sync_status

    - name: "Check on syncing tasks - poll every 60s"
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 50
      delay: 60
      loop: "{{ sync_status.results }}"

    - name: "Sync AAP related repos"
      redhat.satellite.repository_sync:
        username: "{{ satellite_username }}"
        password: "{{ satellite_password }}"
        server_url: "{{ satellite_server_url }}"
        organization: "{{ satellite_organization }}"
        product: "{{ item.product }}"
        repository: "{{ item.name }}"
      loop: "{{ aap_repo_list }}"
      async: 1200
      poll: 0
      register: sync_status

    - name: "Check on syncing tasks - poll every 60s"
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 50
      delay: 60
      loop: "{{ sync_status.results }}"
